module.exports = {
  env: {
    browser: true,
    es2021: true,
  },
  ignorePatterns: ['**.js', '**.d.ts', '**.cjs', '**.mjs', '**.json'],
  root: true,
  parser: '@typescript-eslint/parser',
  plugins: ['@typescript-eslint', 'prettier', 'unused-imports', 'react', 'react-hooks', 'react-native'],
  extends: [
    'eslint:recommended',
    'plugin:prettier/recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
  ],
  rules: {
    'prettier/prettier': [
      'error',
      {
        semi: false,
        arrowParens: 'always',
        bracketSameLine: true,
        bracketSpacing: true,
        singleQuote: true,
        trailingComma: 'all',
        printWidth: 130,
        tabWidth: 2,
        endOfLine: 'auto',
        jsxSingleQuote: false,
      },
    ],
    'import/extensions': 0,
    'import/no-unresolved': 0,
    'import/no-duplicates': 'error',
    'import/prefer-default-export': 0,
    '@typescript-eslint/camelcase': 0,
    '@typescript-eslint/no-unsafe-call': 0,
    '@typescript-eslint/no-unused-vars': 'error',
    '@typescript-eslint/interface-name-prefix': 0,
    '@typescript-eslint/no-explicit-any': 'error',
    '@typescript-eslint/no-unsafe-member-access': 0,
    '@typescript-eslint/explicit-function-return-type': 0,
    '@typescript-eslint/explicit-member-accessibility': 0,
    '@typescript-eslint/no-unnecessary-condition': 'error',
    '@typescript-eslint/no-unnecessary-type-arguments': 'error',
    '@typescript-eslint/prefer-string-starts-ends-with': 'error',
    '@typescript-eslint/explicit-module-boundary-types': 'error',
    '@typescript-eslint/no-unnecessary-boolean-literal-compare': 'error',
  },
  parserOptions: {
    sourceType: 'module',
    ecmaVersion: 'latest',
    tsconfigRootDir: __dirname,
    project: ['./tsconfig.eslint.json'],
  },
}
